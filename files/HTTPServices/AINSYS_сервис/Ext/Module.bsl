#Область Авторизация
Функция ПолучитьПланСинхронизации(входящийЗапрос, ВозвращаемыйФормат, Ответ)
	
	спрПланСинхронизации = Неопределено;
	РезультатАвторизации = "";
	Если Лев(входящийЗапрос.БазовыйURL, 6) <> "https:" Тогда
		РезультатАвторизации = "Обрабатываются только обращения по протоколу https";
	Иначе
		Ключ = входящийЗапрос.ПараметрыЗапроса.Получить("k");
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		|	AINSYS_ПланыСинхронизации.Ссылка КАК Ссылка
		|ИЗ
		|	Справочник.AINSYS_ПланыСинхронизации КАК AINSYS_ПланыСинхронизации
		|ГДЕ
		|	AINSYS_ПланыСинхронизации.Ключ = &Ключ
		|	И НЕ AINSYS_ПланыСинхронизации.ПометкаУдаления
		|	И НЕ AINSYS_ПланыСинхронизации.Отключено";
		Запрос.УстановитьПараметр("Ключ", Ключ);
		Выборка = Запрос.Выполнить().Выбрать();
		Если Выборка.Количество() = 1 Тогда
			Выборка.Следующий();
			
			спрПланСинхронизации = Выборка.Ссылка;
		Иначе
			РезультатАвторизации = "План синхронизации не найден.";
		КонецЕсли;
	КонецЕсли;
	
	Если спрПланСинхронизации = Неопределено Тогда
		Ответ = Новый HTTPСервисОтвет(403);
		Если нрег(ВозвращаемыйФормат) = "json" Тогда
			Ответ.Заголовки["content-type"] = "application/json";
			стрк = Новый Структура("Ошибка", РезультатАвторизации);
			РезультатАвторизации = AINSYS_сервер.ЗначениеВjson(стрк);
		Иначе
			Ответ.Заголовки["content-type"] = "text/html; charset=""utf-8""";
			РезультатАвторизации = "<!DOCTYPE html><html lang=ru><meta charset=utf-8><head></head><body>" + РезультатАвторизации + "</body></html>";
		КонецЕсли;
		
		Ответ.УстановитьТелоИзСтроки(РезультатАвторизации, КодировкаТекста.UTF8);
	КонецЕсли;
	
	Возврат спрПланСинхронизации;
КонецФункции
#КонецОбласти

#Область Метаданные

Функция mdGET(входящийЗапрос)
	Ответ = Новый HTTPСервисОтвет(200);
	
	мас = стрРазделить(входящийЗапрос.ОтносительныйURL, "/", Истина);
	ВозвращаемыйФормат = "";
	Если мас.Количество() > 2 и нрег(мас[2]) = "json" Тогда
		ВозвращаемыйФормат = "json";
	КонецЕсли;
	
	спрПланСинхронизации = ПолучитьПланСинхронизации(входящийЗапрос, ВозвращаемыйФормат, Ответ); // ответ заполняется тут
	Если спрПланСинхронизации = Неопределено Тогда
		Возврат Ответ;
	КонецЕсли;
	
	ОписаниеДоступаКМетодам1С = AINSYS_сервер.ОписаниеДоступаКМетодам1С(входящийЗапрос);
	масРезультат = Новый Массив;
	Если ВозвращаемыйФормат = "json" Тогда
		
									
		масРезультат = Новый Массив;
		масРезультат.Добавить(ОписаниеДоступаКМетодам1С);
		
		Запрос = Новый Запрос;
		Запрос.Текст = "ВЫБРАТЬ
		               |	AINSYS_ОписаниеДанных.Ссылка КАК Ссылка
		               |ИЗ
		               |	Справочник.AINSYS_ОписаниеДанных КАК AINSYS_ОписаниеДанных
		               |ГДЕ
		               |	НЕ AINSYS_ОписаниеДанных.Отключено
		               |	И AINSYS_ОписаниеДанных.ПланСинхронизации = &спрПланСинхронизации";
		Запрос.УстановитьПараметр("спрПланСинхронизации", спрПланСинхронизации);
		Выборка = Запрос.Выполнить().Выбрать();
		
		Пока Выборка.Следующий() Цикл
			масРезультат.Добавить(Справочники.AINSYS_ОписаниеДанных.ПолучитьОписаниеДанных(Выборка.Ссылка, "структура"));
		КонецЦикла;
	
		резJSON = AINSYS_сервер.ЗначениеВjson(масРезультат);
		Ответ.Заголовки["content-type"] = "application/json";
		Ответ.УстановитьТелоИзСтроки(резJSON, КодировкаТекста.UTF8);
	Иначе
		тдРезультат = Справочники.AINSYS_ОписаниеДанных.ПолучитьОписаниеДанныхЧерезСКД(спрПланСинхронизации, ВозвращаемыйФормат);
		
		обл = тдРезультат.Область("R" + xmlСтрока(тдРезультат.ВысотаТаблицы + 2) + "C1:R" + xmlСтрока(тдРезультат.ВысотаТаблицы + 2) + "C16");
		обл.Объединить();
		Шрифт = Новый Шрифт(, 12);
		обл.Шрифт = Шрифт;
		обл.РазмещениеТекста = ТипРазмещенияТекстаТабличногоДокумента.Переносить;
		обл.Текст = ОписаниеДоступаКМетодам1С;
		
		стрРезультат = AINSYS_сервер.ТабличныйДокументВhtml(тдРезультат);
		
		Ответ.УстановитьТелоИзСтроки(стрРезультат, КодировкаТекста.UTF8);
		Ответ.Заголовки["content-type"] = "text/html; charset=""utf-8""";
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции

Функция mdPOST(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки["content-type"] = "text/html; charset=""utf-8""";
	Ответ.УстановитьТелоИзСтроки(ОтветПоУмолчанию(), КодировкаТекста.UTF8);
	Возврат Ответ;
КонецФункции

#КонецОбласти

#Область ПрочиеЗапросы

Функция ОтветПоУмолчанию()
	стрОтвет = "<!DOCTYPE html><html lang=ru><meta charset=utf-8><head></head><body>Конструктор обмена данными. <br>Сегодня: " + Формат(ТекущаяДата(), "ДЛФ=DDT") + "</body></html>";
	Возврат стрОтвет;
КонецФункции

Функция КореньGET(входящийЗапрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ключ = входящийЗапрос.ПараметрыЗапроса.Получить("k");
	Если Не ПустаяСтрока(Ключ) Тогда
		спрПланСинхронизации = ПолучитьПланСинхронизации(входящийЗапрос, "json", Ответ); // ответ заполняется тут
		Если спрПланСинхронизации = Неопределено Тогда
			Возврат Ответ;
		КонецЕсли;
		стрОтвет = AINSYS_сервер.ЗначениеВjson("Запущена синхронизация " + Строка(спрПланСинхронизации));
		Ответ.УстановитьТелоИзСтроки(стрОтвет, КодировкаТекста.UTF8);
		
		ПараметрыФоновогоЗадания = Новый Массив;
		ПараметрыФоновогоЗадания.Добавить(спрПланСинхронизации);
		ФоновыеЗадания.Выполнить("AINSYS_сервер.ОтправитьДанныеПланаСинхронизации", ПараметрыФоновогоЗадания, Ключ, "Отправка по плану синхронизации № " + Строка(спрПланСинхронизации));
	Иначе
		Ответ.Заголовки["content-type"] = "text/html; charset=""utf-8""";
		Ответ.УстановитьТелоИзСтроки(ОтветПоУмолчанию(), КодировкаТекста.UTF8);
	КонецЕсли;

	Возврат Ответ;
КонецФункции

Функция КореньPOST(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки["content-type"] = "text/html; charset=""utf-8""";
	Ответ.УстановитьТелоИзСтроки(ОтветПоУмолчанию(), , КодировкаТекста.UTF8);
	Возврат Ответ;
КонецФункции

Функция pingGET(входящийЗапрос)
	
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки["content-type"] = "application/json";
	
	Ключ = входящийЗапрос.ПараметрыЗапроса.Получить("k");
	Если Не ПустаяСтрока(Ключ) Тогда
		спрПланСинхронизации = ПолучитьПланСинхронизации(входящийЗапрос, "json", Ответ); // ответ заполняется тут
		Если спрПланСинхронизации = Неопределено Тогда
			Возврат Ответ;
		КонецЕсли;
		стрОтвет = AINSYS_сервер.ЗначениеВjson("Запущена синхронизация " + Строка(спрПланСинхронизации));
		Ответ.УстановитьТелоИзСтроки(стрОтвет, КодировкаТекста.UTF8);
		
		ПараметрыФоновогоЗадания = Новый Массив;
		ПараметрыФоновогоЗадания.Добавить(спрПланСинхронизации);
		ФоновыеЗадания.Выполнить("AINSYS_сервер.ОтправитьДанныеПланаСинхронизации", ПараметрыФоновогоЗадания, Ключ, "Отправка по плану синхронизации № " + Строка(спрПланСинхронизации));
	Иначе
		стрОтвет = Справочники.AINSYS_ОписаниеДанных.ПримерВыборки();
		Ответ.УстановитьТелоИзСтроки(стрОтвет, КодировкаТекста.UTF8);
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции

Функция pingPOST(Запрос)
	Ответ = Новый HTTPСервисОтвет(200);
	Ответ.Заголовки["content-type"] = "text/html; charset=""utf-8""";
	Ответ.УстановитьТелоИзСтроки(ОтветПоУмолчанию(), , КодировкаТекста.UTF8);
	Возврат Ответ;
КонецФункции

#КонецОбласти

#Область ДанныеЧтение
// сервер/база/hs/ainsys/data/хххххххххх/ффффффф/ккккккк/пппппппппппп
//		хххххххххх - идентификатор правила
//		ффффффф - требуемый формат html или json
//		ккккккк - количество
//		пппппппппппп - пропускаемое количество
Функция dataGET(входящийЗапрос)
	
	мас = стрРазделить(входящийЗапрос.ОтносительныйURL, "/", Истина);
	ВозвращаемыйФормат = "";
	Если мас.Количество() < 3 Тогда
		Возврат mdGET(входящийЗапрос);
	КонецЕсли;
	
	уид = мас[2];
	ФорматДанных = ?(мас.Количество() > 3, мас[3], "");
	Попытка
		Количество = Число(?(мас.Количество() > 4, мас[4], 0));
	Исключение
		Количество = 0;
	КонецПопытки;
	Попытка
		Смещение = Число(?(мас.Количество() > 5, мас[5], 0));
	Исключение
		Смещение = 0;
	КонецПопытки;
	
	Ответ = Новый HTTPСервисОтвет(200);
	спрПланСинхронизации = ПолучитьПланСинхронизации(входящийЗапрос, ВозвращаемыйФормат, Ответ); // ответ заполняется тут
	Если спрПланСинхронизации = Неопределено Тогда
		Возврат Ответ;
	КонецЕсли;
	
	ТекстВходящегоЗапроса = входящийЗапрос.ПолучитьТелоКакСтроку(КодировкаТекста.UTF8);
	
	ссылкаНаПравило = AINSYS_сервер.ПолучитьСсылкуПоИД(уид, "AINSYS_ОписаниеДанных");
	стркРезультат = Справочники.AINSYS_ОписаниеДанных.ПолучитьВозвращаемуюСтруктуру();
	Если ссылкаНаПравило = Неопределено ИЛИ ссылкаНаПравило.ПланСинхронизации <> спрПланСинхронизации ИЛИ ссылкаНаПравило.Отключено Тогда
		стркРезультат.Ошибка = "Не найдено правило " + уид;
	КонецЕсли;
	
	Если ПустаяСтрока(стркРезультат.Ошибка) Тогда
		Измененные = входящийЗапрос.ПараметрыЗапроса.Получить("n") <> Неопределено;
		стркРезультат = Справочники.AINSYS_ОписаниеДанных.ПолучитьВыгружаемыеДанные(ссылкаНаПравило, ФорматДанных, Количество, Смещение, Измененные, ТекстВходящегоЗапроса);
		// у нас просили изменённые. Снимем отметку изменённости с отправляемых
		// Это не очень правильно делать без подтверждения, однако подтверждение усложняет обмен.
		// Пока оставим так. Спрашивали - получите.
		Если Измененные Тогда
			Справочники.AINSYS_ОписаниеДанных.СнятьФлагИзмененности(ссылкаНаПравило, стркРезультат.СписокИзмененных);
		КонецЕсли;
		стркРезультат.Удалить("СписокИзмененных"); // СписокИзмененных больше не нужен
	КонецЕсли;
	
	Если нрег(ФорматДанных) = "json" Тогда
		стр = AINSYS_сервер.ЗначениеВjson(стркРезультат);
		Ответ.УстановитьТелоИзСтроки(стр);
		Ответ.Заголовки["content-type"] = "application/json";
	Иначе
		Если Не ПустаяСтрока(стркРезультат.Ошибка) Тогда
			стр = "<!DOCTYPE html PUBLIC ""-//W3C//DTD HTML 5.0 Transitional//EN"">
						|<html><head><meta http-equiv=""content-type"" content=""text/html; charset=utf-8""></head><body>
						|<br><div>Ошибка:</div> <div>" + стркРезультат.Ошибка + "</div></body></html>";
		Иначе
			стр = AINSYS_сервер.ТабличныйДокументВhtml(стркРезультат.Данные);
		КонецЕсли;
		Ответ.УстановитьТелоИзСтроки(стр);
		Ответ.Заголовки["content-type"] = "text/html; charset=""utf-8""";
	КонецЕсли;
	
	Возврат Ответ;
КонецФункции

#КонецОбласти

#Область ДанныеЗапись

Функция dataPOST(входящийЗапрос)
	Ответ = Новый HTTPСервисОтвет(200);

	спрПланСинхронизации = ПолучитьПланСинхронизации(входящийЗапрос, "json", Ответ); // ответ заполняется тут
	Если спрПланСинхронизации = Неопределено Тогда
		Возврат Ответ;
	КонецЕсли;
	
	jsonТекстом = входящийЗапрос.ПолучитьТелоКакСтроку("UTF-8");
	стркрезультат = Справочники.AINSYS_ОписаниеДанных.ЗаписатьДанные(спрПланСинхронизации, jsonТекстом);
	
	Ответ = Новый HTTPСервисОтвет(стркрезультат.Статус);
	
	Ответ.Заголовки["content-type"] = "application/json";
	стрОтвет = AINSYS_сервер.ЗначениеВjson(стркрезультат.Результат);
	Ответ.УстановитьТелоИзСтроки(стрОтвет);
	
	Возврат Ответ;
КонецФункции

#КонецОбласти
